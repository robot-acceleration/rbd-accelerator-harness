# tb_dqFpassij
#
# Testbench for dqFpassij.jl

#-------------------------------------------------------------------------------
# Import Libraries
#-------------------------------------------------------------------------------
using LinearAlgebra
using FixedPointNumbers
using Test
include("../../../type_generic/dynamics/helpers_iiwa.jl")
include("dqFpassij.jl") # dqFpassij

#-------------------------------------------------------------------------------
# Data Type
#-------------------------------------------------------------------------------
CUSTOM_TYPE = Float64 ###Fixed{Int32,24} # data type

#-------------------------------------------------------------------------------
# Set Constants
#-------------------------------------------------------------------------------
X,Y,Z,AX,AY,AZ,LX,LY,LZ,g = initConstants(CUSTOM_TYPE)

#-------------------------------------------------------------------------------
# Define Test Function
#-------------------------------------------------------------------------------
function dqFpassijTest(CUSTOM_TYPE,X,Y,Z,AX,AY,AZ,LX,LY,LZ,dqj)
   #----------------------------------------------------------------------------
   # Inputs and Expected Outputs
   #----------------------------------------------------------------------------
   if (dqj == 5) # Input 5
      qd = [0.999905, 0.251662, 0.986666, 0.555751, 0.437108, 0.424718, 0.773223]
      tXlist = [[0.956134 0.292928 0.0 0.0 0.0 0.0; -0.292928 0.956134 0.0 0.0 0.0 0.0; 0.0 0.0 1.0 0.0 0.0 0.0; -0.0461362 0.150591 0.0 0.956134 0.292928 0.0; -0.150591 -0.0461362 0.0 -0.292928 0.956134 0.0; 0.0 0.0 0.0 0.0 0.0 1.0], [-0.927773 0.0 0.373144 0.0 0.0 0.0; 0.373144 0.0 0.927773 0.0 0.0 0.0; 0.0 1.0 0.0 0.0 0.0 0.0; 0.0 -0.187874 0.0 -0.927773 0.0 0.373144; 0.0 0.0755618 0.0 0.373144 0.0 0.927773; -0.2025 0.0 0.0 0.0 1.0 0.0], [-0.826669 0.0 -0.562689 0.0 0.0 0.0; -0.562689 0.0 0.826669 0.0 0.0 0.0; 0.0 1.0 0.0 0.0 0.0 0.0; -0.11507 8.26669e-13 0.169054 -0.826669 0.0 -0.562689; 0.169054 5.62689e-13 0.11507 -0.562689 0.0 0.826669; 1.0e-12 0.0 0.0 0.0 1.0 0.0], [0.999945 0.0 -0.0104451 0.0 0.0 0.0; 0.0104451 0.0 0.999945 0.0 0.0 0.0; 0.0 -1.0 0.0 0.0 0.0 0.0; 0.0 0.215488 0.0 0.999945 0.0 -0.0104451; 0.0 0.00225091 0.0 0.0104451 0.0 0.999945; 0.2155 0.0 0.0 0.0 -1.0 0.0], [-0.668187 0.0 -0.743993 0.0 0.0 0.0; -0.743993 0.0 0.668187 0.0 0.0 0.0; 0.0 1.0 0.0 0.0 0.0 0.0; -0.137267 6.68187e-13 0.123281 -0.668187 0.0 -0.743993; 0.123281 7.43993e-13 0.137267 -0.743993 0.0 0.668187; 1.0e-12 0.0 0.0 0.0 1.0 0.0], [0.951994 0.0 0.306117 0.0 0.0 0.0; -0.306117 0.0 0.951994 0.0 0.0 0.0; 0.0 -1.0 0.0 0.0 0.0 0.0; -6.12234e-13 0.205155 1.90399e-12 0.951994 0.0 0.306117; -1.90399e-12 -0.0659682 -6.12234e-13 -0.306117 0.0 0.951994; 0.2155 0.0 0.0 0.0 -1.0 0.0], [0.662605 0.0 0.748969 0.0 0.0 0.0; 0.748969 0.0 -0.662605 0.0 0.0 0.0; 0.0 1.0 0.0 0.0 0.0 0.0; 0.0606665 0.0 -0.053671 0.662605 0.0 0.748969; -0.053671 0.0 -0.0606665 0.748969 0.0 -0.662605; 0.0 0.0 0.0 0.0 1.0 0.0]]
      Ilist = [[0.1612 -0.0 -0.0 0.0 -0.48 -0.12; -0.0 0.1476 0.0144 0.48 0.0 -0.0; -0.0 0.0144 0.0236 0.12 0.0 0.0; 0.0 0.48 0.12 4.0 0.0 0.0; -0.48 0.0 0.0 0.0 4.0 0.0; -0.12 -0.0 0.0 0.0 0.0 4.0], [0.07098 -7.08e-5 -5.04e-5 0.0 -0.168 0.236; -7.08e-5 0.0250564 -0.009912 0.168 0.0 -0.0012; -5.04e-5 -0.009912 0.0579244 -0.236 0.0012 0.0; 0.0 0.168 -0.236 4.0 0.0 0.0; -0.168 0.0 0.0012 0.0 4.0 0.0; 0.236 -0.0012 0.0 0.0 0.0 4.0], [0.1334 -0.0 -0.0 0.0 -0.39 0.09; -0.0 0.1257 -0.0117 0.39 0.0 -0.0; -0.0 -0.0117 0.0127 -0.09 0.0 0.0; 0.0 0.39 -0.09 3.0 0.0 0.0; -0.39 0.0 0.0 0.0 3.0 0.0; 0.09 -0.0 0.0 0.0 0.0 3.0], [0.0452415 -0.0 -0.0 0.0 -0.0918 0.1809; -0.0 0.0131212 -0.0061506 0.0918 0.0 -0.0; -0.0 -0.0061506 0.0411203 -0.1809 0.0 0.0; 0.0 0.0918 -0.1809 2.7 0.0 0.0; -0.0918 0.0 0.0 0.0 2.7 0.0; 0.1809 -0.0 0.0 0.0 0.0 2.7], [0.0305689 -3.57e-6 -1.292e-5 0.0 -0.1292 0.0357; -3.57e-6 0.0278192 -0.0027132 0.1292 0.0 -0.00017; -1.292e-5 -0.0027132 0.00574972 -0.0357 0.00017 0.0; 0.0 0.1292 -0.0357 1.7 0.0 0.0; -0.1292 0.0 0.00017 0.0 1.7 0.0; 0.0357 -0.00017 0.0 0.0 0.0 1.7], [0.00500094 -0.0 -0.0 0.0 -0.00072 0.00108; -0.0 0.00360029 -4.32e-7 0.00072 0.0 -0.0; -0.0 -4.32e-7 0.00470065 -0.00108 0.0 0.0; 0.0 0.00072 -0.00108 1.8 0.0 0.0; -0.00072 0.0 0.0 0.0 1.8 0.0; 0.00108 -0.0 0.0 0.0 0.0 1.8], [0.00112 -0.0 -0.0 0.0 -0.006 0.0; -0.0 0.00112 -0.0 0.006 0.0 -0.0; -0.0 -0.0 0.001 -0.0 0.0 0.0; 0.0 0.006 -0.0 0.3 0.0 0.0; -0.006 0.0 0.0 0.0 0.3 0.0; 0.0 -0.0 0.0 0.0 0.0 0.3]]
      vlist = [[0.0; 0.0; 0.999905; 0.0; 0.0; 0.0], [0.373109; 0.927685; 0.251662; 0.0; 0.0; 0.0], [-0.450045; -0.00190277; 1.91435; -0.000389117; 0.0920342; 3.73109e-13], [-0.470016; 1.90955; 0.557654; -0.00079912; -8.34731e-6; -0.189019], [-0.100832; 0.722306; 2.34665; 0.274428; -0.107102; -8.34731e-6], [0.622359; 2.26487; -0.297588; 0.409436; -0.131664; 0.0853726], [0.189494; 0.663311; 3.03809; 0.388964; 0.234737; -0.131664]]
      alist = [[0.0; 0.0; 0.671362; 0.0; 0.0; 0.0], [0.483978; 0.528975; 2.08541; 0.0; 0.0; 0.0], [-1.5754; 1.89566; -0.391451; 0.387661; 0.32217; 4.83978e-13], [-0.509994; -0.146673; 3.56933; 0.796127; 0.00876021; -0.661668], [-1.99906; 2.80848; 25.7098; 0.423533; -0.727309; 0.00876021], [6.92905; 24.8232; 102.641; 0.926137; -0.480476; 0.296512], [81.9788; -62.9671; 76.9509; -4.07122; -6.40232; -0.480476]]
      flist = [[-0.386208; 0.368599; 0.28119; 0.818636; 1.98773; -3.07625], [0.0930661; 0.248573; 0.209472; -1.83265; -2.57865; 1.86775], [0.380028; 0.0151653; 0.251379; 0.210761; 2.40183; -2.49168], [0.925628; 0.297174; 0.0203749; -0.839812; -2.1552; -1.17263], [-0.376703; -0.860545; 0.287702; 0.13818; 1.44749; -1.98613], [0.0383153; 0.167; 0.859512; -0.890237; -1.39686; -1.30446], [0.122748; -0.0996843; 0.0769509; -1.83586; -2.03848; -0.211055]]
      dfi_dqj_list = [0.0 0.0 0.0 0.0 0.167419 0.0142073 0.0019181; 0.0 0.0 0.0 0.0 0.0882908 -0.00373699 0.0136536; 0.0 0.0 0.0 0.0 -0.00860167 -0.0121177 -0.00115177; 0.0 0.0 0.0 0.0 0.353863 1.22403 0.534541; 0.0 0.0 0.0 0.0 -1.47426 -0.395695 -0.0628049; 0.0 0.0 0.0 0.0 0.108658 2.21509 -0.0932076]
   else
      qd = [0.999905, 0.251662, 0.986666, 0.555751, 0.437108, 0.424718, 0.773223]
      tXlist = Array{Float64,2}[[0.956134 0.292928 0.0 0.0 0.0 0.0; -0.292928 0.956134 0.0 0.0 0.0 0.0; 0.0 0.0 1.0 0.0 0.0 0.0; -0.0461362 0.150591 0.0 0.956134 0.292928 0.0; -0.150591 -0.0461362 0.0 -0.292928 0.956134 0.0; 0.0 0.0 0.0 0.0 0.0 1.0], [-0.927773 0.0 0.373144 0.0 0.0 0.0; 0.373144 0.0 0.927773 0.0 0.0 0.0; 0.0 1.0 0.0 0.0 0.0 0.0; 0.0 -0.187874 0.0 -0.927773 0.0 0.373144; 0.0 0.0755618 0.0 0.373144 0.0 0.927773; -0.2025 0.0 0.0 0.0 1.0 0.0], [-0.826669 0.0 -0.562689 0.0 0.0 0.0; -0.562689 0.0 0.826669 0.0 0.0 0.0; 0.0 1.0 0.0 0.0 0.0 0.0; -0.11507 8.26669e-13 0.169054 -0.826669 0.0 -0.562689; 0.169054 5.62689e-13 0.11507 -0.562689 0.0 0.826669; 1.0e-12 0.0 0.0 0.0 1.0 0.0], [0.999945 0.0 -0.0104451 0.0 0.0 0.0; 0.0104451 0.0 0.999945 0.0 0.0 0.0; 0.0 -1.0 0.0 0.0 0.0 0.0; 0.0 0.215488 0.0 0.999945 0.0 -0.0104451; 0.0 0.00225091 0.0 0.0104451 0.0 0.999945; 0.2155 0.0 0.0 0.0 -1.0 0.0], [-0.668187 0.0 -0.743993 0.0 0.0 0.0; -0.743993 0.0 0.668187 0.0 0.0 0.0; 0.0 1.0 0.0 0.0 0.0 0.0; -0.137267 6.68187e-13 0.123281 -0.668187 0.0 -0.743993; 0.123281 7.43993e-13 0.137267 -0.743993 0.0 0.668187; 1.0e-12 0.0 0.0 0.0 1.0 0.0], [0.951994 0.0 0.306117 0.0 0.0 0.0; -0.306117 0.0 0.951994 0.0 0.0 0.0; 0.0 -1.0 0.0 0.0 0.0 0.0; -6.12234e-13 0.205155 1.90399e-12 0.951994 0.0 0.306117; -1.90399e-12 -0.0659682 -6.12234e-13 -0.306117 0.0 0.951994; 0.2155 0.0 0.0 0.0 -1.0 0.0], [0.662605 0.0 0.748969 0.0 0.0 0.0; 0.748969 0.0 -0.662605 0.0 0.0 0.0; 0.0 1.0 0.0 0.0 0.0 0.0; 0.0606665 0.0 -0.053671 0.662605 0.0 0.748969; -0.053671 0.0 -0.0606665 0.748969 0.0 -0.662605; 0.0 0.0 0.0 0.0 1.0 0.0]]
      Ilist = Array{Float64,2}[[0.1612 -0.0 -0.0 0.0 -0.48 -0.12; -0.0 0.1476 0.0144 0.48 0.0 -0.0; -0.0 0.0144 0.0236 0.12 0.0 0.0; 0.0 0.48 0.12 4.0 0.0 0.0; -0.48 0.0 0.0 0.0 4.0 0.0; -0.12 -0.0 0.0 0.0 0.0 4.0], [0.07098 -7.08e-5 -5.04e-5 0.0 -0.168 0.236; -7.08e-5 0.0250564 -0.009912 0.168 0.0 -0.0012; -5.04e-5 -0.009912 0.0579244 -0.236 0.0012 0.0; 0.0 0.168 -0.236 4.0 0.0 0.0; -0.168 0.0 0.0012 0.0 4.0 0.0; 0.236 -0.0012 0.0 0.0 0.0 4.0], [0.1334 -0.0 -0.0 0.0 -0.39 0.09; -0.0 0.1257 -0.0117 0.39 0.0 -0.0; -0.0 -0.0117 0.0127 -0.09 0.0 0.0; 0.0 0.39 -0.09 3.0 0.0 0.0; -0.39 0.0 0.0 0.0 3.0 0.0; 0.09 -0.0 0.0 0.0 0.0 3.0], [0.0452415 -0.0 -0.0 0.0 -0.0918 0.1809; -0.0 0.0131212 -0.0061506 0.0918 0.0 -0.0; -0.0 -0.0061506 0.0411203 -0.1809 0.0 0.0; 0.0 0.0918 -0.1809 2.7 0.0 0.0; -0.0918 0.0 0.0 0.0 2.7 0.0; 0.1809 -0.0 0.0 0.0 0.0 2.7], [0.0305689 -3.57e-6 -1.292e-5 0.0 -0.1292 0.0357; -3.57e-6 0.0278192 -0.0027132 0.1292 0.0 -0.00017; -1.292e-5 -0.0027132 0.00574972 -0.0357 0.00017 0.0; 0.0 0.1292 -0.0357 1.7 0.0 0.0; -0.1292 0.0 0.00017 0.0 1.7 0.0; 0.0357 -0.00017 0.0 0.0 0.0 1.7], [0.00500094 -0.0 -0.0 0.0 -0.00072 0.00108; -0.0 0.00360029 -4.32e-7 0.00072 0.0 -0.0; -0.0 -4.32e-7 0.00470065 -0.00108 0.0 0.0; 0.0 0.00072 -0.00108 1.8 0.0 0.0; -0.00072 0.0 0.0 0.0 1.8 0.0; 0.00108 -0.0 0.0 0.0 0.0 1.8], [0.00112 -0.0 -0.0 0.0 -0.006 0.0; -0.0 0.00112 -0.0 0.006 0.0 -0.0; -0.0 -0.0 0.001 -0.0 0.0 0.0; 0.0 0.006 -0.0 0.3 0.0 0.0; -0.006 0.0 0.0 0.0 0.3 0.0; 0.0 -0.0 0.0 0.0 0.0 0.3]]
      vlist = Array{Float64,2}[[0.0; 0.0; 0.999905; 0.0; 0.0; 0.0], [0.373109; 0.927685; 0.251662; 0.0; 0.0; 0.0], [-0.450045; -0.00190277; 1.91435; -0.000389117; 0.0920342; 3.73109e-13], [-0.470016; 1.90955; 0.557654; -0.00079912; -8.34731e-6; -0.189019], [-0.100832; 0.722306; 2.34665; 0.274428; -0.107102; -8.34731e-6], [0.622359; 2.26487; -0.297588; 0.409436; -0.131664; 0.0853726], [0.189494; 0.663311; 3.03809; 0.388964; 0.234737; -0.131664]]
      alist = Array{Float64,2}[[0.0; 0.0; 0.671362; 0.0; 0.0; 0.0], [0.483978; 0.528975; 2.08541; 0.0; 0.0; 0.0], [-1.5754; 1.89566; -0.391451; 0.387661; 0.32217; 4.83978e-13], [-0.509994; -0.146673; 3.56933; 0.796127; 0.00876021; -0.661668], [-1.99906; 2.80848; 25.7098; 0.423533; -0.727309; 0.00876021], [6.92905; 24.8232; 102.641; 0.926137; -0.480476; 0.296512], [81.9788; -62.9671; 76.9509; -4.07122; -6.40232; -0.480476]]
      flist = Array{Float64,2}[[-0.386208; 0.368599; 0.28119; 0.818636; 1.98773; -3.07625], [0.0930661; 0.248573; 0.209472; -1.83265; -2.57865; 1.86775], [0.380028; 0.0151653; 0.251379; 0.210761; 2.40183; -2.49168], [0.925628; 0.297174; 0.0203749; -0.839812; -2.1552; -1.17263], [-0.376703; -0.860545; 0.287702; 0.13818; 1.44749; -1.98613], [0.0383153; 0.167; 0.859512; -0.890237; -1.39686; -1.30446], [0.122748; -0.0996843; 0.0769509; -1.83586; -2.03848; -0.211055]]
      dfi_dqj_list = [0.0 0.0 0.0 0.0 0.167419 0.0142073 0.0019181; 0.0 0.0 0.0 0.0 0.0882908 -0.00373699 0.0136536; 0.0 0.0 0.0 0.0 -0.00860167 -0.0121177 -0.00115177; 0.0 0.0 0.0 0.0 0.353863 1.22403 0.534541; 0.0 0.0 0.0 0.0 -1.47426 -0.395695 -0.0628049; 0.0 0.0 0.0 0.0 0.108658 2.21509 -0.0932076]
   end

   #----------------------------------------------------------------------------
   # Unit Under Test
   #----------------------------------------------------------------------------
   # output variable
   dfi_dqj_list_out = zeros(CUSTOM_TYPE,6,7) # for all Links

   # local variables
   lcurr_dvi_dqj = zeros(CUSTOM_TYPE,6,1)
   lcurr_dai_dqj = zeros(CUSTOM_TYPE,6,1)
   lprev_dvi_dqj = zeros(CUSTOM_TYPE,6,1)
   lprev_dai_dqj = zeros(CUSTOM_TYPE,6,1)

   # forward pass
   for link in dqj:7
      prev_link = (link-1)
      # update local variables
      if (link > 1)
         lprev_v = vlist[prev_link]
         lprev_a = alist[prev_link]
      else
         lprev_v = zeros(CUSTOM_TYPE,6,1)
         lprev_a = zeros(CUSTOM_TYPE,6,1)
      end
      lprev_dvi_dqj = lcurr_dvi_dqj
      lprev_dai_dqj = lcurr_dai_dqj
      tcurrXprev = tXlist[link]
      lcurr_I = Ilist[link]
      lcurr_v = vlist[link]
      # input mux
      mcross = (link == dqj)
      if mcross
         dvdq_xdot_vec = lprev_v
         dadq_xdot_vec = lprev_a
      else
         dvdq_xdot_vec = lprev_dvi_dqj
         dadq_xdot_vec = lprev_dai_dqj
      end
      # forward pass step
      lcurr_dvi_dqj,
      lcurr_dai_dqj,
      dfi_dqj_list_out[:,link] = dqFpassij(CUSTOM_TYPE,X,Y,Z,AX,AY,AZ,LX,LY,LZ,
                                           tcurrXprev,lcurr_I,
                                           qd[link],lcurr_v,mcross,
                                           dvdq_xdot_vec,dadq_xdot_vec)
   end

   #----------------------------------------------------------------------------
   # Print Outputs
   #----------------------------------------------------------------------------
   println("Input = ",dqj)
   println("Expected: ",dfi_dqj_list)
   println("Got:      ",dfi_dqj_list_out)

   #----------------------------------------------------------------------------
   # Test Outputs
   #----------------------------------------------------------------------------
   @test dfi_dqj_list_out ≈ dfi_dqj_list atol=1e-5
   println("Test passed!")
end

#-------------------------------------------------------------------------------
# Set Test Parameters and Run Test
#-------------------------------------------------------------------------------
dqj = 5 # Input 5
dqFpassijTest(CUSTOM_TYPE,X,Y,Z,AX,AY,AZ,LX,LY,LZ,dqj)
